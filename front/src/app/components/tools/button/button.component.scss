$transition-delay : 0.15s;
$shape-name: ('hex', 'small', 'large', 'hex_floating');
$shape-width: (
	'hex': 25%,
	'hex_floating': 25%,
	'small': 15%,
	'large': 10%
);
$disabled-color: gray;
$disabled-border: darken(gray, 10%);

.main {
	position: relative;
	border: 0;
	height: 100%;
	max-width: 100%;
	max-height: 100%;
	background: transparent;

	&.hovered.enabled{
		cursor: pointer;
	}
	&.disabled, .hovered.disabled{
		filter: grayscale(100%);
		& > *{
			filter: grayscale(100%);
		}
	}
	&::ng-deep app-text-with-image .text-tag {
		max-width: 100%;
		max-height: 25px;
		font-weight: bold;
	}
	&.enabled::ng-deep app-text-with-image p {
		font-weight: 550;
		font-size: 100%;
	}
	&.disabled::ng-deep app-text-with-image p {
		color: rgb(61, 61, 61);
		font-size: 100%;
	}
}

.wrapper-button {
	position: relative;
	display: flex;
	height: 100%;
	width: 100%;
	top: 0;
	left: 0;
}

.gradiant-mask {
	@each $name in $shape-name {
		&--#{$name} {
			z-index: 3;
			position: absolute;
			top: 0;
			left: 0px;
			display: flex;
			height: 100%;
			width: 100%;

			$color1: rgba(0, 0, 0, 0.15);
			$color2: rgba(0, 0, 0, 0);
			$color3: rgba(0, 0, 0, .5);
			-webkit-mask-image: linear-gradient(to bottom, $color1 0%, $color2 100%);
			mask-image: linear-gradient(to bottom, $color1 30%, $color2 70%);

			&:hover {
				-webkit-mask-image: linear-gradient(to bottom, $color2 0%, $color1 100%);
				mask-image: linear-gradient(to bottom, $color2 0%, $color1 100%);
			}

			&:active {
				-webkit-mask-image: linear-gradient(to bottom, $color3 0%, $color3 100%);
				mask-image: linear-gradient(to bottom, $color3 0%, $color3 100%);
			}
		}
	}
}

.button-gradiant-background {
	@each $name in $shape-name {
		&--#{$name} {
			z-index: 2;
			background: black;
		}
	}
}

.button-main {
	@each $name, $width in $shape-width {
		&--#{$name} {
			display: flex;
			justify-content: center;
			align-items: center;

			z-index: 1;
			left: 1px;
			top: 1px;
			height: calc(100% - 2px);
			width: calc(100% - 2px);
			position: absolute;

			background-color: var(--color-ares-orange);

			& app-text-with-image {
				width: calc(100% - #{$width});
				color: white;
			}
		}
		&.disabled{
			background-color: $disabled-color;
		}
	}
	&--hex_floating.enabled{
		background: transparent;
	}
}

.button-background {
	@each $name in $shape-name {
		&--#{$name} {
			position: relative;
			left: 0;
			top: 0;
			z-index: 0;
			background-color: var(--color-ares-orange-dark);
		}
	}
	&--hex_floating{
		background: rgba(255, 255, 255, .2);

		&.enabled::before {
			content: '';
			position: absolute;
			inset: 0;
			opacity: 1;
			transition: opacity $transition-delay ease;
			z-index: -1;
		}
		&.enabled::after {
			content: '';
			position: absolute;
			inset: 0;
			background: rgba(255, 255, 255, .2);
			opacity: 0;
			transition: opacity $transition-delay ease;
			z-index: 10;
		}
		&.hovered::before {
			opacity: 0;
		}
		&.hovered::after {
			opacity: 1;
		}
	}
}

.button-shape{
	&--hex, &--hex_floating{
		aspect-ratio: 1.15 / 1;
	}
	&--small{
		aspect-ratio: 3.5 / 1;
	}
	&--large{
		aspect-ratio: 5 / 1;
	}
	@each $name, $width in $shape-width {
		&--#{$name} {
			max-width: 100%;
			max-height: 100%;
			-webkit-clip-path: polygon(0% 50%, #{$width} 0%, calc(100% - #{$width}) 0%, 100% 50%, calc(100% - #{$width}) 100%, #{$width} 100%);
			clip-path: polygon(0% 50%, #{$width} 0%, calc(100% - #{$width}) 0%, 100% 50%, calc(100% - #{$width}) 100%, #{$width} 100%);
		}
	}
}
.button-border {
	$width: 25%;
	$border-thickness: 3px;
	$inner-offset: calc($border-thickness / 2);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	//background-color: black;
	-webkit-clip-path: polygon(0% 50%, #{$width} 0%, calc(100% - #{$width}) 0%, 100% 50%, calc(100% - #{$width}) 100%, #{$width} 100%);
	clip-path: polygon(0% 50%, #{$width} 0%, calc(100% - #{$width}) 0%, 100% 50%, calc(100% - #{$width}) 100%, #{$width} 100%, 0% 50%, calc($border-thickness) 50%, calc($width + $inner-offset) calc(100% - $border-thickness), calc(100% - calc($width + $inner-offset)) calc(100% - $border-thickness), calc(100% - $border-thickness) 50%, calc(100% - calc($width + $inner-offset)) calc($border-thickness), calc($width + $inner-offset) calc($border-thickness), calc($border-thickness) 50%);

	&.enabled::before {
		content: '';
		position: absolute;
		inset: 0;
		background-image: linear-gradient(135deg, rgb(128, 128, 128) 30%, rgb(69, 69, 69) 60%, rgb(208, 208, 208) 85%);
		opacity: 1;
		transition: opacity $transition-delay ease;
		z-index: -1;
	}

	&.enabled::after {
		content: '';
		position: absolute;
		inset: 0;
		background-image: linear-gradient(to right, var(--color-ares-orange) 0%, var(--color-ares-orange) 100%);
		opacity: 0;
		transition: opacity $transition-delay ease;
		z-index: -1;
	}

	// L'effet de hover ne s'applique que si le bouton est enabled
	&.enabled.hovered::before {
		opacity: 0;
	}

	&.enabled.hovered::after {
		opacity: 1;
	}
}
