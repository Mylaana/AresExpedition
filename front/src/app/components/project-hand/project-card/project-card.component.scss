$ares-red: rgb(237, 53, 49);
$ares-blue: rgb(39, 177, 229);
$ares-green: rgb(42, 180, 92);
$ares-purple: rgb(98, 70, 156);

$card-height: 300px;
$card-width: calc($card-height * 63 / 88);

$colors: (
  "red": $ares-red,
  "blue": $ares-blue,
  "green": $ares-green,
  "purple": $ares-purple
);
$dark-colors: (
    "red": darken($ares-red, 15%),
    "blue": rgb(17, 114, 186),
    "green": rgb(0, 113, 58),
    "purple": darken($ares-purple, 15%)
);
$light-colors: (
    "red": lighten($ares-red, 5%),
    "blue": lighten($ares-blue, 5%),
    "green": lighten($ares-green, 5%),
    "purple": rgb(244, 172, 205)
);
$card-back-colors: (
    "red": rgba(130, 30, 30, 1),
    "blue": rgba(50, 100, 150, 1),
    "green": rgba(10, 90, 40, 1)
);

$text-size: 11px;
:host ::ng-deep p  {
    color: white;
    font-size: $text-size;
}
:host ::ng-deep app-text-with-image .text-tag{
    $tag-max-size: calc($text-size * 1.2);
    top: 0;
    max-width: $tag-max-size;
    max-height: $tag-max-size;
}
:host ::ng-deep app-text-with-image .wrapper-megacredit{
    $tag-max-size: calc($text-size * 1.2);
    top: 0;
    width: $tag-max-size;
    height: $tag-max-size;
}
:host ::ng-deep .effect-summary-text.text-tag{
    $tag-max-size: calc($text-size * 2);
    top: 0;
    width: $tag-max-size;
    height: $tag-max-size;
}
img {
    width: 100%;
    aspect-ratio: 1/1;
}
button {
    background: transparent;
}
.shadowed-text{
    background: rgba(0, 0, 0, .5);
    border-radius: 5px;
    width: 100%;
    padding: calc($text-size / 8);
}
.wrapper-card{
    z-index: 0;
    position: relative;
    height: $card-height;
    width: $card-width;
    
    overflow: hidden;

    padding-bottom: calc($card-height * .015);
    padding-right: calc($card-height * .007);
    border: black solid 2px;
    border-radius: calc($card-height * .05);

    @each $color-name, $color-value in $card-back-colors {
        &.#{$color-name}Project {
            background: $color-value;
        }
    }
}
.selected{
    filter: drop-shadow(0 0 0.75rem gold);
}
.selectable{
    &:hover{
        cursor: pointer;
    }
}
.wrapper-card-grid{
    z-index: 1;
    position: relative;
    display: grid;
    grid-template-columns: 1fr 0.5fr 1fr 1fr 1fr;
    grid-template-rows: 0.9fr 0.4fr 2fr 0.02fr 1.2fr;

    height: 100%;
    width: 100%;
    padding: 0px;
    
    margin: 0px;
}
.grid-box-cost{
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 2;
}
.wrapper-cost{
    position: relative;
    height: 100%;
    width: 100%;
    & p {
        color: black;
        font-weight: bold;
        font-size: large;
    } 
    &.cost-mod{
        z-index: 3;
        top: -15px;
        filter: grayscale(20%);
        opacity: 80%;
        & img{
            width: 50%;
        }
        & p {
            font-size: medium;
        }
    }
}
.wrapper-cost-image {
    z-index: 2;
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;

    height: 100%;
    width: 100%;
    
    & img{
        width: 70%;
        aspect-ratio: 1;
    }
}
.wrapper-cost-value {
    z-index: 3;
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}
.grid-box-title{
    grid-column-start: 2;
    grid-column-end: 6;
    grid-row-start: 1;
    grid-row-end: 2;
    
    height: 100%;
    width: auto;
    padding-right: 5%;
    padding-top: 0%;

    display: flex;
    justify-content: center;
    align-items: center;
    > p {
        color: white;
        font-weight: bold;
        font-size: calc($card-width / 13);
        font-style: italic;
        text-align: center;

        $text-shadow-colour: $ares-red;
        $text-shadow-size: .35px;
        text-shadow:
          $text-shadow-size*-1 $text-shadow-size*-1 0 $ares-red,  
          $text-shadow-size $text-shadow-size*-1 0 $ares-red,
          $text-shadow-size*-1  $text-shadow-size 0 $ares-red,
          $text-shadow-size  $text-shadow-size 0 $ares-red;  
    }
}
.grid-box-main{
    grid-column-start: 2;
    grid-column-end: 6;
    grid-row-start: 2;
    grid-row-end: 4;

    height: 100%;
    padding-right: 2%;
    padding-left: 2%;
    
    display: flex;
    flex-direction: column;
    gap: 10%;
}
.wrapper-played-vp{
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.wrapper-played{
    display: flex;
    flex-direction: row;
}
.played-icon{
    height: calc($card-height * .06);
    border: 1px gold solid;
    border-radius: 25%;
    background: rgba(0, 0, 0, .5);
    & img{
        height: 100%;
    }
}
.grid-box-prerequisite{
    grid-column-start: 2;
    grid-column-end: 6;
    grid-row-start: 2;
    grid-row-end: 3;
}
.wrapper-prerequisite{
    display: flex;
    justify-content: space-between;
    gap: 2%;
    position: relative;

    width: 100%;

    font-size: small;
    & p {
        font-size: small;
    }
}
.prerequisite-summary-Text{
    display: flex;
    align-items: center;
    justify-content: center;

    min-width: 20%;
    width: auto;
    height: 100%;

    border: grey 2px solid;
    background: rgba($color: grey, $alpha: .6);
    border-radius: 25%;
    &.min{
        border: gold 2px solid;
    }
    &.max{
        border: orangered 2px solid;
    }
}
.prerequisite-text{
    display: flex;
    align-items: center;
    justify-content: center;

    padding-left: 5%;
    flex-grow: 1;
    height: 100%;
}
.grid-box-tag{
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 2;
    grid-row-end: 4;
}
.grid-box-effect{
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 5;
    grid-row-end: 6;
    height: 100%;
    width: 100%;
}
.grid-box-vp-text{
    display: flex;
    align-items: center;
    justify-content: right;

    font-weight: bold;
}
.grid-box-effect-text{
    grid-column-start: 3;
    grid-column-end: 6;
    grid-row-start: 5;
    grid-row-end: 6;
    height: 100%;
    
    margin-left: 3%;

    display: flex;
    justify-content: center;
    align-items: center;
}
.wrapper-tag-zone{
    position: relative;
    height: 100%;
    width: 100%;
    padding-top: 0%;
}
.wrapper-tag{
    position: relative;
    
    width: 100%;
    height: calc($card-height / 7);
    margin-top: 5%;
}
.tag-zone {
    position: relative;
    z-index: 1; /* Ensure .tag-zone is above .tag-zone-mask */
    -webkit-clip-path: polygon(0 0, 99% 75%, 82% 100%, 52% 100%, 0 57%);
    clip-path: polygon(0% 0%, 95% 70%, 70% 100%, 32% 100%, 0 77%);
    top: 0;
    width: 100%;
    height: 100%;

    @each $color-name, $color-value in $light-colors {
        &.#{$color-name}Project {
            background: $color-value;
        }
    }
}
.tag-zone-mask {
    z-index: 1;
    position: relative;
    height: 100%;
    width: 100%;
    -webkit-mask-image: radial-gradient(circle, rgb(255, 255, 255) 20%, rgba(0, 0, 0, 0.8) 80%);
    mask-image: radial-gradient(circle, rgb(255, 255, 255) 20%, rgba(0, 0, 0, 0.8) 80%);
}
.tag-icon {
    z-index: 3;
    position: absolute;
    top: 10%;
    left: 20%;
    padding: 5%;
    height: 65%;
    aspect-ratio: 1/1;
    border-radius: 50%;
    background: grey;

    $darken-value: 5%;
    @each $color-name, $color-value in $dark-colors {
        &.#{$color-name}Project {
            background: $color-value;
            background: radial-gradient(circle, rgba(darken($color-value, calc($darken-value - 1%)), 1) 0%, rgba(darken($color-value, calc($darken-value - 1%)), 1) 40%, rgba(darken($color-value, $darken-value), 1) 55%, rgba($color-value, 1) 65%,rgba($color-value, 1) 100%);
            border: darken($color-value, 10%) 1px solid;
        }
    }
    @each $color-name, $color-value in $light-colors {
        &.#{$color-name}Project {
            outline: rgba($color-value, .7) 2px solid;
        }
    }
}
.wrapper-vp{
    width: 100%;
    height: calc($card-height * .14);
    margin-bottom: 2%;

    display: grid;
    grid-template-columns: 3fr 1fr;
    & .grid-box-vp-text{
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 2;
    }
    .grid-box-vp-icon{
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 1;
        grid-row-end: 2;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: 100%;
    }
}
.wrapper-vp-icon{
    position: relative;
    width: 100%;
    height: 100%;
    padding-left: 30%;

    display: flex;
    align-items: center;
    justify-content: left;
}
.vp-icon{
    z-index: 1;
    position: relative;

    border-radius: 50%;
    border-width: 2px;
    border-style: solid;
    border-color: rgb(61, 61, 61);

    outline: rgb(216, 216, 216) 1px solid;
    outline-offset: 0px;

    display: flex;
    justify-content: center;
    align-items: center;

    height: 70%;
    aspect-ratio: 1;    

    background: linear-gradient(0deg, rgb(26, 17, 9) 0%, rgba(143,92,63,1) 35%, rgba(255,239,213,1) 100%);
    & p{
        font-size: 20px;
        font-weight: bold;       
    }
}
.wrapper-vp-background{
    z-index: 0;
    position: absolute;
    display: flex;
    justify-content: space-between;
    align-items: center;

    width: 100%;
    height: 100%;

    padding-left: 12%;
}
.layout-vp-right{
    width: 75%;
}
.layout-vp-left{
    width: 10%;
}
.layout-vp-right, .layout-vp-left{
    z-index: 0;
    position: relative;
    top: 0px;
    height: 90%;
    border: transparent 0px solid;
    outline: white 1px solid;
    outline-offset: 2px;
    background-color: rgba($color: grey, $alpha: .7);
}
.wrapper-left-layout{
    top: -100%;
    position: relative;
    height: 100%;
}
.left-layout{
    z-index: 0;
    position: relative;
    height: $card-height * .72;
    width: 18%;
    border-top-left-radius: 15px;
    

    -webkit-clip-path: polygon(100% 0, 100% 65%, 54% 100%, 0 100%, 0 0);
    clip-path: polygon(0 0, 100% 0, 100% 27%, 90% 28.5%, 90% 94%, 70% 97%, 20% 97%, 0 100%);

    border-top: 0;
    border-left: 0;  

    @each $color-name, $color-value in $dark-colors {
        &.#{$color-name}Project {
            background: $color-value;
        }
    }

    &:before{
        $color-one: rgba(0, 0, 0, 1);
        $color-two: rgba(0, 0, 0, 0);
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: 
        linear-gradient(45deg, rgba(0, 0, 0, 1) 0%, $color-one 30%, $color-two 30%, $color-two 70%, $color-one 70%, $color-one 100%),
        linear-gradient(135deg, $color-one 0%, $color-one 30%, $color-two 30%, $color-two 70%, $color-one 70%, $color-one 100%),
        linear-gradient(225deg, $color-one 0%, $color-one 30%, $color-two 30%, $color-two 70%, $color-one 70%, $color-one 100%),
        linear-gradient(315deg, $color-one 0%, $color-one 30%, $color-two 30%, $color-two 70%, $color-one 70%, $color-one 100%);
        background-size: 7px 7px;
        background-repeat: repeat;
        transform: rotate(0deg);
    }
    &:after{
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(95deg, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, .5) 40%, rgba(0, 0, 0, 0.2) 80%);
    }
}
.top-left-layout{
    z-index: 0;
    position: absolute;

    top: 0;
    height: calc($card-height / 5);
    width: calc($card-width / 3.8);
    border-top-left-radius: 15px;

    -webkit-clip-path: polygon(100% 0, 100% 65%, 54% 100%, 0 100%, 0 0);
    clip-path: polygon(100% 0, 95% 9%, 90% 9%, 90% 14%, 84% 14%, 84% 38%, 69% 50%, 25% 50%, 0% 33%, 0 0);

    border-top: 0;
    border-left: 0;  

    @each $color-name, $color-value in $colors {
        &.#{$color-name}Project {
            background: $color-value;
        }
    }
}
.wrapper-effect-summary-border{
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: white;

    $top-left-angle: 15%;
    $top-right-angle: 93%;
    $bottom-right-angle: 90%;
    $right-inside-width: 4%;
    $right-inside-height: 33%;
    $right-inside-angle: 33%;
    $right-offset: 0%;
    $top-offset-height: 3%;
    $top-inside-width: 37%;
    $top-offset-angle: 3%;
    clip-path: polygon(calc($top-left-angle ) $top-offset-height,
        $top-inside-width $top-offset-height,
        calc($top-inside-width + $top-offset-angle) 0%,
        calc(100% - $top-inside-width - $top-offset-angle) 0%,
        calc(100% - $top-inside-width) $top-offset-height,
        $top-right-angle $top-offset-height, 
        calc(100% - $right-offset) calc(100% - $top-right-angle + $top-offset-height),
        calc(100% - $right-offset) $right-inside-height,
        calc(100% - $right-inside-width - $right-offset) calc($right-inside-width + $right-inside-angle),
        calc(100% - $right-inside-width - $right-offset) calc(100% - $right-inside-width - $right-inside-angle),
        calc(100% - $right-offset) calc(100% - $right-inside-height),
        calc(100% - $right-offset) $bottom-right-angle,
        calc($bottom-right-angle - $right-offset) calc(100% - $top-offset-height),
        calc(100% - $top-inside-width) calc(100% - $top-offset-height),
        calc(100% - $top-inside-width - $top-offset-angle) 100%,
        calc($top-inside-width + $top-offset-angle) 100%,
        calc($top-inside-width) calc(100% - $top-offset-height),
        0 calc(100% - $top-offset-height), 0 calc($top-left-angle + $top-offset-height));
}
.wrapper-effect-summary{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;

    $top-left-angle: 15%;
    $top-right-angle: 100%;
    $bottom-right-angle: 90%;
    $right-inside-width: 4%;
    $right-inside-height: 33%;
    $right-inside-angle: 33%;
    $right-offset: 1%;
    $top-offset-height: 12%;
    $border-top-offset-height: 3%;
    $inside-margin: calc($top-offset-height + $border-top-offset-height);
    $top-inside-width: 37%;
    $top-offset-angle: 3%;
    $bottom-height: 89%;
    clip-path: polygon(calc($top-left-angle ) $top-offset-height,
        $top-inside-width $top-offset-height,
        calc($top-inside-width + $top-offset-angle) $inside-margin,
        calc(100% - $top-inside-width - $top-offset-angle) $inside-margin,
        calc(100% - $top-inside-width) $top-offset-height,
        $top-right-angle $top-offset-height,
        calc(100% - $right-offset) calc(100% - $top-right-angle + $top-offset-height),
        calc(100% - $right-offset) $right-inside-height,
        calc(100% - $right-inside-width - $right-offset) calc($right-inside-width + $right-inside-angle),
        calc(100% - $right-inside-width - $right-offset) calc(100% - $right-inside-width - $right-inside-angle),
        calc(100% - $right-offset) calc(100% - $right-inside-height),
        calc(100% - $right-offset) $bottom-height,
        calc(100% - $top-inside-width) $bottom-height,
        calc(100% - $top-inside-width - $top-offset-angle) calc($bottom-height - $border-top-offset-height),
        calc($top-inside-width + $top-offset-angle) calc($bottom-height - $border-top-offset-height),
        calc($top-inside-width) calc($bottom-height),
        0 $bottom-height,
        0 calc($top-left-angle + $top-offset-height));
}
.effect-summary-top-shape{
    position: absolute;
    z-index: 5;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    $back-color: rgb(80, 80, 80);
    background: linear-gradient(90deg, rgba($back-color,1) 0%, rgba($back-color, .4) 35%, rgba($back-color,.5) 60%, rgba($back-color,1) 100%);

    $top-left-angle: 15%;
    $top-right-angle: 93%;
    $bottom-right-angle: 90%;
    $bottom-height: 11%;
    $inside-margin: 1%;
    $right-width: calc(100% - $inside-margin );
    $right-inside-width: 4%;
    $right-inside-height: 33%;
    $right-inside-angle: 33%;
    $top-offset-height: 4%;
    $top-inside-width: 37%;
    $top-offset-angle: 3%;
    $bottom-offset-height: calc($bottom-height + $top-offset-height - $inside-margin);
    clip-path: polygon(calc($top-left-angle ) $top-offset-height,
    $top-inside-width $top-offset-height,
    calc($top-inside-width + $top-offset-angle) $inside-margin,
    calc(100% - $top-inside-width - $top-offset-angle) $inside-margin,
    calc(100% - $top-inside-width) $top-offset-height,
    $top-right-angle $top-offset-height,
    $right-width calc(100% - $top-right-angle + $top-offset-height),
    calc(100% - $top-inside-width) $bottom-height,
    calc(100% - $top-inside-width - $top-offset-angle) $bottom-offset-height,
    calc($top-inside-width + $top-offset-angle) $bottom-offset-height,
    $top-inside-width  $bottom-height, $top-left-angle calc($top-left-angle - $top-offset-height),
    0 calc($top-left-angle + $bottom-height),
    0 calc($top-left-angle + $top-offset-height));
}
.effect-summary-bottom-shape{
    position: absolute;
    z-index: 5;
    top: 0%;
    left: 0;
    width: 100%;
    height: 100%;

    $back-color: rgb(80, 80, 80);
    background: linear-gradient(90deg, rgba($back-color,1) 0%, rgba($back-color, .4) 35%, rgba($back-color,.5) 60%, rgba($back-color,1) 100%);

    $bottom-right-angle: 90%;
    $inside-margin: 1%;
    $right-inside-width: 4%;
    $right-inside-height: 33%;
    $right-inside-angle: 33%;
    $right-width: calc(100% - $inside-margin);
    $top-offset-height: 89%;
    $top-height: calc($top-offset-height + $inside-margin);
    $top-inside-width: 37%;
    $top-offset-angle: 3%;
    $top-inside-top: calc($top-height - 3%);
    $bottom-offset-height: 3%;
    $bottom-inside-height: calc(100% - $inside-margin - $bottom-offset-height);
    $bottom-height: calc(100% - $inside-margin);
    clip-path: polygon(0 $top-height,
        $top-inside-width $top-height,
        calc($top-inside-width + $top-offset-angle) $top-inside-top,
        calc(100% - $top-inside-width - $top-offset-angle) $top-inside-top,
        calc(100% - $top-inside-width) $top-height,
        $right-width $top-height,
        $bottom-right-angle $bottom-inside-height,
        calc(100% - $top-inside-width) $bottom-inside-height,
        calc(100% - $top-inside-width - $top-offset-angle) $bottom-height,
        calc($top-inside-width + $top-offset-angle) $bottom-height,
        $top-inside-width  $bottom-inside-height,
        0 $bottom-inside-height);
}
.effect-summary-background{
    z-index: 2;
    position: relative;
    width: 100%;
    height: 100%;
    
    background: rgba(100,100,100,.5);
}
.effect-summary-background-production{
    $color-one: $ares-red;
    $color-two: rgb(253, 157, 67);
    $step1: 2%;
    $step2: 4%;
    $step3: 6%;
    background: repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
    background: -webkit-repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
    background: -moz-repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
}
.effect-summary-background-grey-production{
    $color-one: rgb(66, 66, 66);
    $color-two: rgb(184, 184, 184);
    $step1: 0%;
    $step2: 4%;
    $step3: 6%;
    background: repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
    background: -webkit-repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
    background: -moz-repeating-linear-gradient(135deg,$color-one 0%, $color-two $step1, $color-two $step2, $color-one $step3);
}
.effect-summary-background-radial-grid{
    z-index: 1;
    position: absolute;
    
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    @each $color-name, $color-value in $dark-colors {
        &.#{$color-name}Project {
            background: $color-value;
        }
    }
    &:after{
        content: "";
        position: absolute;
        top: -100%;
        left: -250%;
        width: 500px;
        height: 500px;
    }
    &.action{
        background-color: map-get($dark-colors, "blue");
        &:after {
            $background-dots: map-get($light-colors, "blue");
            background: 
            linear-gradient(45deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(135deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(225deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(315deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%);
            background-size: 3px 3px; // Taille du dégradé
            background-repeat: repeat; // Répétition du dégradé
            pointer-events: none; // Assure que le pseudo-élément ne soit pas cliquable
            transform: rotate(45deg);
        }
    }
    &.trigger{
        background-color: map-get($dark-colors, "purple");
        &:after{
            $background-dots: map-get($light-colors, "purple");
            background: 
            linear-gradient(45deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(135deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(225deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%),
            linear-gradient(315deg, $background-dots 0%, $background-dots 30%, rgba(0, 0, 0, 0) 30%, rgba(0, 0, 0, 0) 70%, $background-dots 70%, $background-dots 100%);
            background-size: 3px 3px; // Taille du dégradé
            background-repeat: repeat; // Répétition du dégradé
            pointer-events: none; // Assure que le pseudo-élément ne soit pas cliquable
            transform: rotate(45deg);
        }
    }
}
.effect-summary-background-action{
    z-index: 1;
    position: absolute;
    top: 0;
    $back-color: map-get($dark-colors, "blue");
    background: linear-gradient(0deg, rgba($back-color,.5) 0%, $back-color 45%, $back-color 65%, rgba($back-color,.5) 100%);
}
.effect-summary-background-trigger{
    z-index: 1;
    position: absolute;
    top: 0;
    $back-color: map-get($dark-colors, "purple");
    background: linear-gradient(0deg, rgba($back-color,.5) 0%, $back-color 45%, $back-color 65%, rgba($back-color,.5) 100%);
}
.effect-summary-foreground-radial-white{
    z-index: 3;
    position: relative;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse 200% 80%, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 40%,  rgba(255,255,255, .7) 55%, rgba(255,255,255,1) 100%);
}
.effect-summary-text{
    z-index: 3;
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.wrapper-background-layout{
    z-index: -1;
    position: absolute;
    top: 0;
    left: 0;
}
.wrapper-activation{
    display: flex;
    flex-direction: column;
}