server {
    listen 80;
    server_name ares-expedition.com;

	# Redirect to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
	http2 on;
    server_name ares-expedition.com;

	# SSL Certificate
    ssl_certificate     /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

	# SSL Security
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=()" always;
    add_header Cross-Origin-Opener-Policy same-origin always;
    add_header Cross-Origin-Embedder-Policy require-corp always;
    add_header Cross-Origin-Resource-Policy same-origin always;

	root /usr/share/nginx/html;

    # Block known bad user-agents
    if ($http_user_agent ~* (masscan|sqlmap|nmap|curl|nikto|wget|fuzz)) {
        return 403;
    }

    # Method filter
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

	# Deny listed bad agent
	if ($bad_agent) {
    	return 403;
	}

	# Gzip compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css application/xml text/javascript image/svg+xml;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_vary on;

	# Whitelisted locations
    location = / {
        index index.html;
        try_files $uri $uri/ /index.html =404;

        # DDoS Protection
        limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;

        # No indexation
        autoindex off;
    }
    location = /create-game {
        try_files $uri $uri/ /index.html =404;
        limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;
    }
    location = /card-overview {
        try_files $uri $uri/ /index.html =404;
        limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;
    }
	location ~ ^/game/[^/]+/[^/]+$ {
        try_files $uri $uri/ /index.html =404;
        limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;
    }
	location ~ ^/new-game-links/?$ {
        try_files $uri $uri/ /index.html =404;
        limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;
    }
	location = /index.html {
		try_files $uri =404;
		limit_req zone=req_limit_per_ip burst=5 nodelay;
        limit_conn conn_limit_per_ip 20;
	}

    # WebSocket STOMP
    location /ws {
        proxy_pass http://back:8080/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        limit_conn conn_limit_per_ip 10;
    }
    location /ws/ {
        proxy_pass http://back:8080/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        limit_conn conn_limit_per_ip 10;
    }

    # API backend
    location /api/ {
        proxy_pass http://back:8080/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        limit_req zone=req_limit_per_ip burst=1 nodelay;
        limit_conn conn_limit_per_ip 10;
    }

    # Monitoring
    location = /ping {
        return 200 'pong';
        add_header Content-Type text/plain;
    }

    # Default : forbidden accesss to hidden files but well-known
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Forbidden extensions
    location ~* \.(php|ini|log|sh|conf|env|sql|bak|swp|old|save|htaccess)$ {
        deny all;
    }

    # Statics storage (HTML/JS/CSS/JSON/images/etc)
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|json)$ {
		try_files $uri =404;
        expires 30d;
        access_log off;
    }

	# Deny other locations
	location / {
    	return 403;
	}
}
